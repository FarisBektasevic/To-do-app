{"version":3,"sources":["ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDo","input","inputChange","addNewTask","tasks","deleteTask","changeTask","className","value","onChange","e","type","onClick","map","task","index","isDone","title","icon","faCheck","id","faTrashAlt","App","useState","setInput","setTasks","counter","setCounter","event","target","filter","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA6CeA,EAxCF,SAAC,GAOP,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,qCACE,2CACA,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOC,MAAOP,EAAOQ,SAAU,SAACC,GAAD,OAAOR,EAAYQ,IAAIC,KAAK,SAC3D,wBAAQC,QAAST,EAAjB,oBAEDC,EAAMS,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAKR,UAAU,WAAf,UACE,sBAAMA,UAAWO,EAAKE,OAAS,OAAS,GAAxC,SAA6CF,EAAKG,QAClD,sBAAKV,UAAU,UAAf,UACE,cAAC,IAAD,CACEA,UAAU,QACVW,KAAMC,IACNP,QAAS,kBAAMN,EAAWQ,EAAKM,OAEjC,cAAC,IAAD,CACEb,UAAU,OACVW,KAAMG,IACNT,QAAS,kBAAMP,EAAWS,EAAKM,YAXNN,EAAKM,cCiCjCE,MApDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcqB,EAAd,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmCA,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,CACEN,MAAOA,EACPC,YArCc,SAAC0B,GACnBJ,EAASI,EAAMC,OAAOrB,QAqClBL,WAlCa,WACjBwB,EAAWD,EAAU,GACrB,IAAIZ,EAAO,CACTM,GAAIM,EACJT,MAAOhB,EACPe,QAAQ,GAGNf,IACFwB,EAAS,GAAD,mBAAKrB,GAAL,CAAYU,KACpBU,EAAS,MAyBPpB,MAAOA,EACPC,WAXa,SAACK,GAClBe,EAASrB,EAAM0B,QAAO,SAAChB,GAAD,OAAUA,EAAKM,KAAOV,OAWxCJ,WAvBa,SAACc,GAClBK,EACErB,EAAMS,KAAI,SAACC,EAAMC,GAKf,OAJID,EAAKM,KAAOA,IACdN,EAAKE,QAAUF,EAAKE,QAEtBe,QAAQC,IAAIjB,GACLD,YCtBAmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.62bb64c6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ToDo.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ToDo = ({\r\n  input,\r\n  inputChange,\r\n  addNewTask,\r\n  tasks,\r\n  deleteTask,\r\n  changeTask,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h1>TO DO APP</h1>\r\n      <div className=\"todo-app\">\r\n        <div className=\"add-item\">\r\n          <input value={input} onChange={(e) => inputChange(e)} type=\"text\" />\r\n          <button onClick={addNewTask}>Add</button>\r\n        </div>\r\n        {tasks.map((task, index) => {\r\n          return (\r\n            <div className=\"task-div\" key={task.id}>\r\n              <span className={task.isDone ? 'done' : ''}>{task.title}</span>\r\n              <div className=\"buttons\">\r\n                <FontAwesomeIcon\r\n                  className=\"check\"\r\n                  icon={faCheck}\r\n                  onClick={() => changeTask(task.id)}\r\n                />\r\n                <FontAwesomeIcon\r\n                  className=\"icon\"\r\n                  icon={faTrashAlt}\r\n                  onClick={() => deleteTask(task.id)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n","import { useState } from 'react'\nimport './App.css'\nimport ToDo from './ToDo'\n\nfunction App() {\n  const [input, setInput] = useState('')\n  const [tasks, setTasks] = useState([])\n  const [counter, setCounter] = useState(1)\n\n  const inputChange = (event) => {\n    setInput(event.target.value)\n  }\n\n  const addNewTask = () => {\n    setCounter(counter + 1)\n    let task = {\n      id: counter,\n      title: input,\n      isDone: false,\n    }\n\n    if (input) {\n      setTasks([...tasks, task])\n      setInput('')\n    }\n  }\n\n  const changeTask = (id) => {\n    setTasks(\n      tasks.map((task, index) => {\n        if (task.id === id) {\n          task.isDone = !task.isDone\n        }\n        console.log(index)\n        return task\n      })\n    )\n  }\n  const deleteTask = (e) => {\n    setTasks(tasks.filter((task) => task.id !== e))\n  }\n\n  return (\n    <div className=\"App\">\n      <ToDo\n        input={input}\n        inputChange={inputChange}\n        addNewTask={addNewTask}\n        tasks={tasks}\n        deleteTask={deleteTask}\n        changeTask={changeTask}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}